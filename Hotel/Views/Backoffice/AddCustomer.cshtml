@model Hotel.Models.Clienti

@{
    ViewBag.Title = "AddCustomer";
}

<h2 class="mt-3">AGGIUNGI UN CLIENTE</h2>
<div class="mt-3">
    @using (Html.BeginForm("AddCustomer", "Backoffice", new { Area = "" }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Nome, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Nome") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.Nome, null, new { htmlAttributes = new { @class = "invalid-feedback mb" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Cognome, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Cognome") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.Cognome, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.CodiceFiscale, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.CodiceFiscale, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("CodiceFiscale") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.CodiceFiscale, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Citta, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Citta, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Citta") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.Citta, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Provincia, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Provincia, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Provincia") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.Provincia, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Email, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Email") ? "" : "is-invalid")}", type = "email" } })
                @Html.ValidationMessageFor(model => model.Email, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Telefono, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Telefono") ? "" : "is-invalid")}", type = "text" } })
                @Html.ValidationMessageFor(model => model.Telefono, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Mobile, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Mobile") ? "" : "is-invalid")}", type = "text" } })
                @Html.ValidationMessageFor(model => model.Mobile, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                <button type="submit" class="btn btn-success mt-3">Aggiungi cliente</button>
            </div>
        </div>
    }
</div>