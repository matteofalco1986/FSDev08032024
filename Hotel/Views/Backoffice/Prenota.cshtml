@model Hotel.Models.Prenotazioni

@{
    ViewBag.Title = "Prenota";
}

<h2 class="mt-3">Aggiungi una prenotazione</h2>
<div class="mt-3">
    @using (Html.BeginForm("Prenota", "Backoffice", new { Area = "" }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Data, new { Value = DateTime.Now })
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.ClienteId, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.DropDownListFor(model => model.ClienteId, new SelectList(ViewBag.Clienti, "ClienteId", "CodiceFiscale"), "Seleziona un cliente", new { @class = $"form-select {(ViewData.ModelState.IsValidField("ClienteId") ? "" : "is-invalid")}" })
                @Html.ValidationMessageFor(model => model.ClienteId, null, new { htmlAttributes = new { @class = "invalid-feedback mb" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.CameraId, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.DropDownListFor(model => model.CameraId, new SelectList(ViewBag.Camere, "CameraId", "CameraId"), "Seleziona una camera", new { @class = $"form-select {(ViewData.ModelState.IsValidField("CameraId") ? "" : "is-invalid")}" })
                @Html.ValidationMessageFor(model => model.CameraId, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.TipoPrenotazioneId, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.DropDownListFor(model => model.TipoPrenotazioneId, new SelectList(ViewBag.TipiPrenotazione, "TipoPrenotazioneId", "TipoPrenotazione"), "Seleziona il tipo di prenotazione", new { @class = $"form-select {(ViewData.ModelState.IsValidField("CamerTipoPrenotazioneIdaId") ? "" : "is-invalid")}" })
                @Html.ValidationMessageFor(model => model.TipoPrenotazioneId, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Anno, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Anno, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Provincia") ? "" : "is-invalid")}", type = "number" } })
                @Html.ValidationMessageFor(model => model.Anno, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.InizioSoggiorno, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.InizioSoggiorno, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Email") ? "" : "is-invalid")}", type = "date" } })
                @Html.ValidationMessageFor(model => model.InizioSoggiorno, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.FineSoggiorno, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.FineSoggiorno, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Telefono") ? "" : "is-invalid")}", type = "date" } })
                @Html.ValidationMessageFor(model => model.FineSoggiorno, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Caparra, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Caparra, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Mobile") ? "" : "is-invalid")}", type = "number", step = "0.01" } })
                @Html.ValidationMessageFor(model => model.Caparra, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Tariffa, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Tariffa, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Mobile") ? "" : "is-invalid")}", type = "number", step = "0.01" } })
                @Html.ValidationMessageFor(model => model.Tariffa, null, new { htmlAttributes = new { @class = "invalid-feedback" }, style = "color:red;" })
                <div class="mb-3"></div>
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                <button type="submit" class="btn btn-success mt-3">Prenota</button>
            </div>
        </div>
    }
</div>
